// Code generated by protoc-gen-go.
// source: src/github.com/keithballdotnet/arx/proto/arx.proto
// DO NOT EDIT!

/*
Package arx_kms is a generated protocol buffer package.

It is generated from these files:
	src/github.com/keithballdotnet/arx/proto/arx.proto

It has these top-level messages:
	KeyMetadata
	CreateKeyRequest
*/
package arx_kms

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

// KeyMetadata is a representation of an Encryption Key
type KeyMetadata struct {
	KeyID        string `protobuf:"bytes,1,opt,name=KeyID,json=keyID" json:"KeyID,omitempty"`
	CreationDate string `protobuf:"bytes,2,opt,name=CreationDate,json=creationDate" json:"CreationDate,omitempty"`
	Description  string `protobuf:"bytes,3,opt,name=Description,json=description" json:"Description,omitempty"`
	Enabled      bool   `protobuf:"varint,4,opt,name=Enabled,json=enabled" json:"Enabled,omitempty"`
}

func (m *KeyMetadata) Reset()                    { *m = KeyMetadata{} }
func (m *KeyMetadata) String() string            { return proto.CompactTextString(m) }
func (*KeyMetadata) ProtoMessage()               {}
func (*KeyMetadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// CreateKeyRequest will create a key
type CreateKeyRequest struct {
	Description string `protobuf:"bytes,1,opt,name=Description,json=description" json:"Description,omitempty"`
}

func (m *CreateKeyRequest) Reset()                    { *m = CreateKeyRequest{} }
func (m *CreateKeyRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateKeyRequest) ProtoMessage()               {}
func (*CreateKeyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*KeyMetadata)(nil), "arx.kms.KeyMetadata")
	proto.RegisterType((*CreateKeyRequest)(nil), "arx.kms.CreateKeyRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for Arx service

type ArxClient interface {
	//
	// Creates a new key
	//
	CreateKey(ctx context.Context, in *CreateKeyRequest, opts ...grpc.CallOption) (*KeyMetadata, error)
}

type arxClient struct {
	cc *grpc.ClientConn
}

func NewArxClient(cc *grpc.ClientConn) ArxClient {
	return &arxClient{cc}
}

func (c *arxClient) CreateKey(ctx context.Context, in *CreateKeyRequest, opts ...grpc.CallOption) (*KeyMetadata, error) {
	out := new(KeyMetadata)
	err := grpc.Invoke(ctx, "/arx.kms.arx/CreateKey", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Arx service

type ArxServer interface {
	//
	// Creates a new key
	//
	CreateKey(context.Context, *CreateKeyRequest) (*KeyMetadata, error)
}

func RegisterArxServer(s *grpc.Server, srv ArxServer) {
	s.RegisterService(&_Arx_serviceDesc, srv)
}

func _Arx_CreateKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(CreateKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ArxServer).CreateKey(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _Arx_serviceDesc = grpc.ServiceDesc{
	ServiceName: "arx.kms.arx",
	HandlerType: (*ArxServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateKey",
			Handler:    _Arx_CreateKey_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 229 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x90, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0xc6, 0x09, 0xa5, 0x84, 0x5e, 0x3a, 0x20, 0xab, 0x83, 0x61, 0xaa, 0x32, 0x31, 0x25, 0x52,
	0x61, 0x66, 0x21, 0x1d, 0x10, 0x62, 0xc9, 0x1b, 0x9c, 0xed, 0x13, 0x44, 0x49, 0xe3, 0x62, 0x5f,
	0x25, 0x98, 0x79, 0x71, 0x6c, 0x83, 0x4a, 0xd5, 0x6e, 0xdf, 0x1f, 0xfb, 0x67, 0x7d, 0x86, 0x95,
	0x77, 0xba, 0x7e, 0xeb, 0xf8, 0x7d, 0xa7, 0x2a, 0x6d, 0x37, 0x75, 0x4f, 0x41, 0x2b, 0x1c, 0x06,
	0x63, 0x79, 0x24, 0xae, 0xd1, 0x7d, 0xd6, 0x5b, 0x67, 0xd9, 0x46, 0x55, 0x25, 0x25, 0xf2, 0x28,
	0xfb, 0x8d, 0x2f, 0xbf, 0x33, 0x28, 0x5e, 0xe8, 0xeb, 0x95, 0x18, 0x0d, 0x32, 0x8a, 0x05, 0x4c,
	0x83, 0x7d, 0x6e, 0x64, 0xb6, 0xcc, 0xee, 0x66, 0xed, 0xb4, 0x8f, 0x46, 0x94, 0x30, 0x7f, 0x72,
	0x84, 0xdc, 0xd9, 0xb1, 0x41, 0x26, 0x79, 0x9e, 0xca, 0xb9, 0x3e, 0xc8, 0xc4, 0x12, 0x8a, 0x86,
	0xbc, 0x76, 0xdd, 0x36, 0x46, 0x72, 0x92, 0x8e, 0x14, 0xe6, 0x3f, 0x12, 0x12, 0xf2, 0xf5, 0x88,
	0x6a, 0x20, 0x23, 0x2f, 0x42, 0x7b, 0xd5, 0xe6, 0xf4, 0x6b, 0xcb, 0x07, 0xb8, 0x4e, 0x7c, 0x0a,
	0x6f, 0xb7, 0xf4, 0xb1, 0x23, 0xcf, 0xc7, 0xbc, 0xec, 0x84, 0xb7, 0x5a, 0xc3, 0x24, 0xcc, 0x10,
	0x8f, 0x30, 0xdb, 0x5f, 0x16, 0x37, 0xd5, 0xdf, 0xb2, 0xea, 0x18, 0x78, 0xbb, 0xd8, 0x57, 0x07,
	0x83, 0xcb, 0x33, 0x75, 0x99, 0xbe, 0xe4, 0xfe, 0x27, 0x00, 0x00, 0xff, 0xff, 0x1e, 0x55, 0xad,
	0x69, 0x48, 0x01, 0x00, 0x00,
}
