// Code generated by protoc-gen-go.
// source: src/github.com/keithballdotnet/arx/kms/kms.proto
// DO NOT EDIT!

/*
Package kms is a generated protocol buffer package.

It is generated from these files:
	src/github.com/keithballdotnet/arx/kms/kms.proto

It has these top-level messages:
	KeyMetadata
	CreateKeyRequest
*/
package kms

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

// KeyMetadata is a representation of an Encryption Key
type KeyMetadata struct {
	KeyID        string `protobuf:"bytes,1,opt,name=KeyID,json=keyID" json:"KeyID,omitempty"`
	CreationDate string `protobuf:"bytes,2,opt,name=CreationDate,json=creationDate" json:"CreationDate,omitempty"`
	Description  string `protobuf:"bytes,3,opt,name=Description,json=description" json:"Description,omitempty"`
	Enabled      bool   `protobuf:"varint,4,opt,name=Enabled,json=enabled" json:"Enabled,omitempty"`
	KeyType      string `protobuf:"bytes,5,opt,name=KeyType,json=keyType" json:"KeyType,omitempty"`
}

func (m *KeyMetadata) Reset()                    { *m = KeyMetadata{} }
func (m *KeyMetadata) String() string            { return proto.CompactTextString(m) }
func (*KeyMetadata) ProtoMessage()               {}
func (*KeyMetadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// CreateKeyRequest will create a key
type CreateKeyRequest struct {
	Description string `protobuf:"bytes,1,opt,name=Description,json=description" json:"Description,omitempty"`
}

func (m *CreateKeyRequest) Reset()                    { *m = CreateKeyRequest{} }
func (m *CreateKeyRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateKeyRequest) ProtoMessage()               {}
func (*CreateKeyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*KeyMetadata)(nil), "kms.KeyMetadata")
	proto.RegisterType((*CreateKeyRequest)(nil), "kms.CreateKeyRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for Kms service

type KmsClient interface {
	//
	// Creates a new key
	//
	CreateKey(ctx context.Context, in *CreateKeyRequest, opts ...grpc.CallOption) (*KeyMetadata, error)
}

type kmsClient struct {
	cc *grpc.ClientConn
}

func NewKmsClient(cc *grpc.ClientConn) KmsClient {
	return &kmsClient{cc}
}

func (c *kmsClient) CreateKey(ctx context.Context, in *CreateKeyRequest, opts ...grpc.CallOption) (*KeyMetadata, error) {
	out := new(KeyMetadata)
	err := grpc.Invoke(ctx, "/kms.kms/CreateKey", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Kms service

type KmsServer interface {
	//
	// Creates a new key
	//
	CreateKey(context.Context, *CreateKeyRequest) (*KeyMetadata, error)
}

func RegisterKmsServer(s *grpc.Server, srv KmsServer) {
	s.RegisterService(&_Kms_serviceDesc, srv)
}

func _Kms_CreateKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(CreateKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(KmsServer).CreateKey(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _Kms_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kms.kms",
	HandlerType: (*KmsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateKey",
			Handler:    _Kms_CreateKey_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 243 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0xad, 0x6b, 0xad, 0x3b, 0xdd, 0xc3, 0x12, 0x14, 0x82, 0xa7, 0xa5, 0x27, 0x4f, 0xad,
	0xa8, 0x78, 0xf3, 0x64, 0x3d, 0x88, 0x78, 0x29, 0xbe, 0xc0, 0xb4, 0x19, 0xb4, 0xa4, 0xdb, 0xd4,
	0x64, 0x16, 0xdc, 0x87, 0xf1, 0x5d, 0x4d, 0xb2, 0xa0, 0xcb, 0x7a, 0x08, 0xcc, 0xff, 0xff, 0x99,
	0xf9, 0x98, 0x81, 0x6b, 0x67, 0xbb, 0xea, 0xbd, 0xe7, 0x8f, 0x4d, 0x5b, 0x76, 0x66, 0x5d, 0x69,
	0xf2, 0x75, 0x8b, 0xc3, 0xa0, 0x0c, 0x8f, 0xc4, 0x15, 0xda, 0xaf, 0x4a, 0xaf, 0x5d, 0x78, 0xe5,
	0x64, 0x0d, 0x1b, 0x31, 0xf3, 0x65, 0xf1, 0x9d, 0x40, 0xfe, 0x42, 0xdb, 0x57, 0x62, 0x54, 0xc8,
	0x28, 0xce, 0x21, 0xf5, 0xf2, 0xb9, 0x96, 0xc9, 0x2a, 0xb9, 0x9a, 0x37, 0xa9, 0x0e, 0x42, 0x14,
	0xb0, 0x78, 0xb4, 0x84, 0xdc, 0x9b, 0xb1, 0x46, 0x26, 0x79, 0x1c, 0xc3, 0x45, 0xb7, 0xe7, 0x89,
	0x15, 0xe4, 0x35, 0xb9, 0xce, 0xf6, 0x53, 0xb0, 0xe4, 0x2c, 0x7e, 0xc9, 0xd5, 0x9f, 0x25, 0x24,
	0x64, 0x4f, 0x23, 0xb6, 0x03, 0x29, 0x79, 0xe2, 0xd3, 0xb3, 0x26, 0xa3, 0x9d, 0x0c, 0x89, 0xa7,
	0xbe, 0x6d, 0x27, 0x92, 0x69, 0xec, 0xcb, 0xf4, 0x4e, 0x16, 0x77, 0xb0, 0x8c, 0x64, 0xf2, 0x79,
	0x43, 0x9f, 0x1b, 0x72, 0x7c, 0x48, 0x4a, 0xfe, 0x91, 0x6e, 0x1e, 0x20, 0x2c, 0x27, 0xee, 0x61,
	0xfe, 0xdb, 0x2c, 0x2e, 0xca, 0xb0, 0xfa, 0xe1, 0xb0, 0xcb, 0x65, 0xb4, 0xf7, 0x4e, 0x50, 0x1c,
	0xb5, 0xa7, 0xf1, 0x40, 0xb7, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x8b, 0x26, 0x80, 0xbd, 0x54,
	0x01, 0x00, 0x00,
}
